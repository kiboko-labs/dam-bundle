{% extends bap.layout %}

{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% set reloadLink -%}
    <a href="#" onclick="window.location.reload(false);return false;">
        {{- 'oro.navigation.menuupdate.reload_link.label'|trans -}}
    </a>
{%- endset %}

{% block content %}
    {% set routePrefix = 'kiboko_dam_node_' %}

    {% set breadcrumbs = {
        'entity': teamstorage,
        'indexPath': path('kiboko_dam_index'),
        'indexLabel': 'kiboko.dam.teamstoragenode.entity_plural_label'|trans,
        'entityTitle': teamstorage.names|localized_value
    } %}

    <div class="layout-content"{% if pageComponent is defined %}{{ UI.renderPageComponentAttributes(pageComponent) }}{% endif %}>
        <div class="container-fluid page-title">
            <div class="navigation navbar-extra navbar-extra-right">
                <div class="row">
                    <div class="pull-left-extra">
                        {% block pageHeader %}
                            {{ include('KibokoDAMBundle:tree:pageHeader.html.twig') }}
                        {% endblock pageHeader %}
                    </div>

                    <div class="pull-right">
                        {{ UI.button({
                            'path' : path('kiboko_dam_root_create', { root: teamstorage.uuid}),
                            'iCss': 'fa-folder',
                            'label': 'kiboko.dam.documentnode.create_label'|trans({ '%entityName%': 'kiboko.dam.documentnode.entity_label'|trans }),
                            'title': 'kiboko.dam.documentnode.create_label'|trans({ '%entityName%': 'kiboko.dam.documentnode.entity_label'|trans })
                        }) }}

                        {{ UI.buttonSeparator() }}

                        {# Create Divider button #}
                        {% set html = UI.clientButton({
                            'dataUrl': path('kiboko_dam_upload_asset_widget', { node: teamstorage.uuid}),
                            'aCss': 'btn-primary upload_button_widget',
                            'iCss': 'fa-image',
                            'label': 'kiboko.dam.updload'|trans({ '%entityName%': 'kiboko.dam.document.entity_label'|trans }),
                            'widget': {
                                'type': 'dialog',
                                'multiple': false,
                                'reload-grid-name': 'kiboko-dam-documents-grid',
                                'options': {
                                    'alias': 'kiboko-dam-upload-asset-dialog',
                                    'dialogOptions' : {
                                        'title' : 'kiboko.dam.updload'|trans({ '%entityName%': 'kiboko.dam.document.entity_label'|trans }),
                                        'label': 'kiboko.dam.updload'|trans({ '%entityName%': 'kiboko.dam.document.entity_label'|trans }),
                                        'allowMaximize': false,
                                        'allowMinimize': false,
                                        'modal': true,
                                        'width': 550,
                                        'height': 600
                                    }
                                }
                            }
                        }) %}

                        {% set html = html ~ UI.ajaxButton({
                            'label': 'kiboko.dam.updload_batch'|trans({ '%entityName%': 'kiboko.dam.document.entity_plural_label'|trans }),
                            'title': 'kiboko.dam.updload_batch'|trans({ '%entityName%': 'kiboko.dam.document.entity_plural_label'|trans }),
                            'aCss': 'btn-primary',
                            'iCss': 'fa-plus',
                            'dataMethod': 'POST',
                            'dataRedirect': app.request.uri,
                            'dataUrl': path(routePrefix ~ 'create', { parent: teamstorage.uuid, parentKey: teamstorage.names|localized_value, 'isDivider': true, root: teamstorage.uuid }),
                            'successMessage': dividerCreatedMessage|default('kiboko.dam.documentnode.divider_created')|trans({'%reload_link%': reloadLink})
                        }) %}

                        {% set parameters = {
                            'html': html,
                            'groupKey': 'createButtons',
                            'options': {
                                'moreButtonAttrs': {
                                    'class': 'btn-primary'
                                }
                            }
                        } %}

                        {{ UI.pinnedDropdownButton(parameters) }}
                    </div>
                </div>
            </div>
        </div>


        <div class="scrollable-container sidebar-container clearfix">

            {% block content_data %}
                {% set treeOptions = {
                    'data' : tree,
                    'menu' : teamstorage.uuid,
                    'nodeId': teamstorage.uuid,
                    'updateAllowed' : true,
                    'view' : 'kibokodam/js/app/views/tree-manage-view',
                    'onRootSelectRoute' : routePrefix ~ 'browse',
                    'onSelectRoute' : routePrefix ~ 'update',
                    'onMoveRoute' : routePrefix ~ 'move',
                    'successMessage': movedMessage|default('oro.navigation.menuupdate.moved_success_message')
                } %}

                {% embed "OroUIBundle::content_sidebar.html.twig" with {options: {
                    scrollbar: '[data-role="jstree-container"]'
                }} %}
                    {% block sidebar %}
                        {{ UI.renderJsTree(
                            {
                                'label': teamstorage.names|localized_value,
                                'treeOptions': treeOptions
                            },
                            {
                                'move': {
                                    'view': 'oroui/js/app/views/jstree/move-action-view',
                                    'routeName': routePrefix ~ 'move',
                                    'routeParams': {menuName: teamstorage.uuid}
                                }
                            }
                        ) }}
                    {% endblock sidebar %}

                    {% block content %}
                        {% if teamstorage.documents.empty %}
                        <div class="category-data">
                            <div class="tree-empty-content scrollable-container">
                                {{ 'kiboko.dam.documentnode.empty_node'|trans }}
                            </div>
                        </div>
                        {% else %}
                        <div class="category-data drop-target" data-page-component-module="kibokodam/js/app/views/drag-and-drop" >
                            <div class="tree-empty-content scrollable-container" >
                               {{  dataGrid.renderGrid('kiboko-dam-documents-grid', { parent: teamstorage.uuid }) }}
                            </div>
                        </div>
                        {% endif %}
                    {% endblock content %}
                {% endembed %}
            {% endblock content_data %}
        </div>
    </div>
{% endblock content %}
